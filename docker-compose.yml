version: '3.8'

services:
  # Application RTFM2WIN
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: rtfm2win-app
    ports:
      - "8000:80"
      - "5173:5173"  # Vite HMR
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      - node_modules:/var/www/html/node_modules
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_HOST=mysql
      - DB_DATABASE=rtfm2win
      - DB_USERNAME=rtfm2win
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - BROADCAST_DRIVER=pusher
      - PUSHER_HOST=websockets
      - PUSHER_PORT=6001
      - PUSHER_SCHEME=http
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rtfm2win-network

  # Base de données MySQL
  mysql:
    image: mysql:8.0
    container_name: rtfm2win-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: rtfm2win
      MYSQL_USER: rtfm2win
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - rtfm2win-network

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: rtfm2win-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
    networks:
      - rtfm2win-network

  # WebSockets Server (Laravel WebSockets)
  websockets:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: rtfm2win-websockets
    ports:
      - "6001:6001"
    volumes:
      - .:/var/www/html
    environment:
      - APP_ENV=local
      - DB_HOST=mysql
      - DB_DATABASE=rtfm2win
      - DB_USERNAME=rtfm2win
      - DB_PASSWORD=password
      - REDIS_HOST=redis
    command: ["php", "artisan", "websockets:serve", "--host=0.0.0.0", "--port=6001"]
    depends_on:
      - mysql
      - redis
    networks:
      - rtfm2win-network

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: rtfm2win-queue
    volumes:
      - .:/var/www/html
    environment:
      - APP_ENV=local
      - DB_HOST=mysql
      - DB_DATABASE=rtfm2win
      - DB_USERNAME=rtfm2win
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - QUEUE_CONNECTION=redis
    command: ["php", "artisan", "queue:work", "--verbose", "--tries=3", "--timeout=90"]
    depends_on:
      - mysql
      - redis
    networks:
      - rtfm2win-network

  # Scheduler (Cron)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: rtfm2win-scheduler
    volumes:
      - .:/var/www/html
    environment:
      - APP_ENV=local
      - DB_HOST=mysql
      - DB_DATABASE=rtfm2win
      - DB_USERNAME=rtfm2win
      - DB_PASSWORD=password
      - REDIS_HOST=redis
    command: ["sh", "-c", "while true; do php artisan schedule:run; sleep 60; done"]
    depends_on:
      - mysql
      - redis
    networks:
      - rtfm2win-network

  # MailHog pour tester les emails
  mailhog:
    image: mailhog/mailhog:latest
    container_name: rtfm2win-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - rtfm2win-network

  # phpMyAdmin pour gérer MySQL
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: rtfm2win-phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: rtfm2win
      PMA_PASSWORD: password
    depends_on:
      - mysql
    networks:
      - rtfm2win-network

  # Redis Commander pour gérer Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: rtfm2win-redis-commander
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - rtfm2win-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  node_modules:
    driver: local

networks:
  rtfm2win-network:
    driver: bridge 